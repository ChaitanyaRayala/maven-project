pipeline{
    agent any
    tools{
        tool name: 'Jdk', type: 'jdk'
        tool name: 'Maven', type: 'maven'
        tool name: 'Docker', type: 'org.jenkinsci.plugins.docker.commons.tools.DockerTool'
    }
    //To specify IP addresses for aws tomcat instances
    parameters{
        string(name:'tomcat_dev',defaultValue:'ec2-34-227-162-42.compute-1.amazonaws.com',description:'staging server')
        string(name:'tomcat_production',defaultValue:'ec2-54-175-78-150.compute-1.amazonaws.com',description:'production server')
    }
    
    /*Run the jenkins job at given time conditions
    triggers{
        pollSCM('* * * * *')
    }*/

    stages{
        stage('Build'){
            steps{                
                bat "Maven/bin/mvn clean install"                
            }
            post{
                success{
                    echo 'Now archiving..'
                    archiveArtifacts artifacts:'**/target/*.war'
                }
                failure{
                    echo 'cannot copy artifacts to jenkins'
                }
            }
        }
        stage('Containerize built war file'){
            steps{                
                bat "Docker/docker build -t tomcatwebserver:${env.BUILD_ID} ."
            }
        }
        stage('Deployment'){
            parallel{
                stage('Deploy to staging'){
                    steps{
                        bat "echo y|pscp -i C:/Users/Rayala/Desktop/Chaitanya/AWS/tomcatPrivateKey.ppk \"C:/Program Files (x86)/Jenkins/workspace/fullyAutomatedJob/webapp/target/webapp.war\" ec2-user@${params.tomcat_dev}:/var/lib/tomcat8/webapps"
                    }
                }
                stage('Deploy to production'){
                    steps{
                        bat "echo y|pscp -i C:/Users/Rayala/Desktop/Chaitanya/AWS/tomcatPrivateKey.ppk \"C:/Program Files (x86)/Jenkins/workspace/fullyAutomatedJob/webapp/target/webapp.war\" ec2-user@${params.tomcat_production}:/var/lib/tomcat8/webapps"
                    }
                }
            }
        }
    }
}